# TMUX configuration

# set up the fish shell
if-shell -b '[ -f /opt/homebrew/bin/fish ]'\
  'set-option -g default-shell "/opt/homebrew/bin/fish"'
if-shell -b '[ -f /usr/local/bin/fish ]'\
  'set-option -g default-shell "/usr/local/bin/fish"'

set-option -sa terminal-features ',ghostty:RGB'

# use C-s, since it's on the home row and easier to hit than C-b
set -g prefix C-s
unbind-key C-s
bind-key C-s send-prefix

# if last pane is closed, change to another session instead of detaching
set-option -g detach-on-destroy off

# vi is good
set -w -g mode-keys vi

set -g focus-events on

set -g base-index 0

set -g mouse on

set -w -g aggressive-resize on

set -g renumber-windows on

set -sg escape-time 0

set -g repeat-time 0

set -g set-titles off #on
set -g set-titles-string "#T - #W"

set -g allow-rename off

set -w -g display-panes-time 1500

set -w -g monitor-activity off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

set -g history-limit 50000

# set -g lock-after-time 0
# set -g lock-command ""
# set -g monitor-silence 0
# set -g visual-silence off
# set -g alert-silence clock
# set -g silence-action current
# set -g visual-bell off

# show statusbar
set -g status on

set -g popup-border-lines none

set -g pane-active-border-style bg=default,fg=color0
set -g pane-border-style fg=color0

# name every tab as current directoy
set -g automatic-rename-format '#{b:pane_current_path}'

set -w -g clock-mode-colour green

set -g status-interval 1
set -g status-fg default
set -g status-position bottom #bottom #top
set -g status-justify left
set -g status-style bg=default
set -g status-style fg=colour7
set -g status-left " "
set -g status-right-length 100
set -g status-right "#[fg=colour7]#[bg=default] #(~/.config/scripts/battery.sh) "
# set -g status-right "#S #[fg=colour7]#[bg=default] #{network_bandwidth}#(~/.config/scripts/battery.sh) \uf0e7#[fg=colour7]  %d/%m #[fg=colour7] %H:%M:%S"

set -g window-status-current-format "#[fg=white]#[bg=default]#W"
set -g window-status-format "#[bg=default]#[fg=color240]#W"

# toggle statusbar
bind C-b set-option -g status

# show current pane tty
bind Y display-message "#{pane_tty}"

bind q display-panes

# Avoid delete window/pane confirmation
unbind -n M-x
bind -n M-d confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Choose tmux paste buffer
bind * choose-buffer
bind P paste-buffer

# Swap window positon to the left/right
bind < run-shell 'tmux swap-window -t -1 \; select-window -t -1'
bind > run-shell 'tmux swap-window -t +1 \; select-window -t +1'

bind / command-prompt "split-window 'exec man %%'"
bind S command-prompt "new-window -n %1 'ssh %1'"

# synchronize all panes in a window
bind y setw synchronize-panes

bind : command-prompt
bind r refresh-client; display-message "client reloaded."
bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# bind-key enter next-layout
bind space next-window
bind bspace previous-window
# default ones but slightly resized
bind M-3 select-layout "e977,201x56,0,0[201x9,0,0,55,201x46,0,10{100x46,0,10,54,100x46,101,10,53}]"
bind M-4 select-layout "3a2c,201x56,0,0{108x56,0,0,6,92x56,109,0[92x42,109,0,0,92x13,109,43,5]}"
bind M-5 select-layout "9c2b,201x56,0,0[201x44,0,0{100x44,0,0,65,100x44,101,0,68},201x11,0,45,66]"

# zoomig into a new window and back
unbind M-z
bind -n M-z resize-pane -Z

unbind l
unbind '"'
unbind %
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
bind -n 'M-v' split-window -h
bind -n 'M-s' split-window -v

# Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Vim keys to selec panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle

bind -n S-Left set-option -g status-position top
bind -n S-Right set-option -g status-position bottom

# Don't exit copy mode on double or triple click.
bind -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"
bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy
unbind -T copy-mode-vi MouseDragEnd1Pane

# send current pane to another window
bind Â£ choose-tree -Zw "join-pane -t '%%'"
# bring select pane to current window
bind @ choose-tree -Zw "join-pane -s '%%'"

# toggle basic popup with "org" session
bind C-n if-shell -F '#{==:#{session_name},org}' {
  detach-client
} {
  display-popup -BE -S fg=color0 -h 35% -w 100% -x 0% -y 100% "tmux new-session -A -s org"
}

# toggle session switcher popup
bind C-s display-popup -BE -S fg=color0 -h 10% -w 100% -x 0% -y 100% "~/.config/scripts/tmux-sessions-popup.sh"

bind -n C-\\ if-shell -F '#{==:#{session_name},scratch}' {
  detach-client
} {
  display-popup -BE -S fg=color0 -h 35% -w 100% -x 0% -y 100% "tmux new-session -A -s scratch"
}

bind C-p if-shell -F '#{==:#{session_name},scratch}' {
  detach-client
} {
  display-popup -BE -S fg=color0 -h 70% -w 70% -x C -y C "tmux new-session -A -s scratch"
}

# bind-key A display-popup -d '#{pane_current_path}' -xC -yC -w 80% -h 80% -E "htop"

# capture content of pane |> filter |> fzf |> action
# tmux capture-pane -J -p |
#     grep -oE '(https?|ftp|file):/?//[-A-Za-z0-9+&@#/%?=~_|!:,.;]*[-A-Za-z0-9+&@#/%=~_|]' |
#     sort -u | fzf-tmux --prompt "Select URL: " | xargs open

