# TMUX configuration

# use C-s, since it's on the home row and easier to hit than C-b
set -g prefix C-s
unbind-key C-s
bind-key C-s send-prefix

# vi by default when $EDITOR contains 'vi'
# set -w -g mode-keys vi

# allow mouse events
set -g mouse on

# show statusbar
set -g status on

# change to most recent session instead of detaching tmux on session destroy
# set -g detach-on-destroy off

# allow focus events to pass through tmux
set -g focus-events on

# on a window close, renumber the remaining base on base-index
set -g base-index 1
set -g renumber-windows on

set -sg escape-time 0
set -g repeat-time 0

set -g set-titles off #on
set -g set-titles-string "#T - #W"

set -g allow-rename off

set -w -g display-panes-time 1500

set -w -g monitor-activity off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

set -g history-limit 50000

# set -g lock-after-time 0
# set -g lock-command ""

set -g pane-active-border-style bg=default,fg=color0
set -g pane-border-style fg=color0

set -g popup-border-lines single

# name every window as current directoy
set -g automatic-rename-format '#{b:pane_current_path}'

set -w -g clock-mode-colour green

set -g status-interval 1
set -g status-position bottom # bottom #top
set -g status-justify left # absolute-centre
set -g status-style "bg=default fg=colour7"
set -g status-left " "
set -g status-right-length 100
set -g status-right "#[fg=colour7]#[bg=default] #(~/.config/scripts/battery.sh) "
# set -g status-right "#S #[fg=colour7]#[bg=default]#(~/.config/scripts/ncspot.sh song-artist)   #{network_bandwidth}#(~/.config/scripts/battery.sh) \uf0e7#[fg=colour7]  %d/%m #[fg=colour7] %H:%M:%S"


# set -g window-status-current-format "#[fg=white]#[bg=default]#W"
# set -g window-status-format "#[bg=default]#[fg=color240]#W"
# set-window-option -g window-status-separator "#[fg=color2] • "

set -g window-status-format "•"
set -g window-status-style "fg=color240"
set -g window-status-current-format "•"
set -g window-status-current-style "#{?window_zoomed_flag,fg=yellow,fg=white,nobold}"
set -g window-status-bell-style "fg=red,nobold"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# Combined with using `tmux new-session -t alreadyExistingSessionName -s newSessionName`
# we can have two views into the same session viewing different windows
set -w -g aggressive-resize on


bind r refresh-client; display-message "client reloaded."
bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# toggle statusbar
bind C-b set status

# show current pane tty
bind Y display-message "#{pane_tty}"

# show pane num
bind q display-panes

# Avoid delete window/pane confirmation
unbind -n M-x # dangerously close to M-z
bind -n M-d confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Choose tmux paste buffer
bind * choose-buffer

# Rename session
bind-key . command-prompt -p "Session name:" "rename-session '%%'"

# Swap window positon to the left/right
bind < run-shell 'tmux swap-window -t -1 \; select-window -t -1'
bind > run-shell 'tmux swap-window -t +1 \; select-window -t +1'

# open man in h split
bind / command-prompt "split-window 'exec man %%'"

# quick ssh in new window
bind S command-prompt "new-window -n %1 'ssh %1'"

# synchronize all panes in a window
bind y setw synchronize-panes

# bind-key enter next-layout
bind space next-window
bind bspace previous-window

# default ones but slightly resized [tmux lsw]
bind M-3 select-layout "e977,201x56,0,0[201x9,0,0,55,201x46,0,10{100x46,0,10,54,100x46,101,10,53}]"
bind M-4 select-layout "3a2c,201x56,0,0{108x56,0,0,6,92x56,109,0[92x42,109,0,0,92x13,109,43,5]}"
bind M-5 select-layout "9c2b,201x56,0,0[201x44,0,0{100x44,0,0,65,100x44,101,0,68},201x11,0,45,66]"

# zoomig in/out
bind -n M-z resize-pane -Z

# vim like pane splits
unbind l
unbind '"'
unbind %
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
bind -n 'M-v' split-window -h
bind -n 'M-s' split-window -v

# Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -n S-Left  resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Up    resize-pane -U 10
bind -n S-Down  resize-pane -D 10

# Vim keys to selec panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-no-clear pbcopy
unbind-key -T copy-mode-vi MouseDragEnd1Pane

bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Up resize-pane -U 10
bind -n S-Down resize-pane -D 10

# send current pane to another window
bind £ choose-tree -Zw "join-pane -t '%%'"
# bring selected pane to current window
bind @ choose-tree -Zw "join-pane -s '%%'"

# popups

# toggle basic popup with "org" session
bind C-n if-shell -F '#{==:#{session_name},org}' {
  detach-client
} {
  display-popup -BE -S fg=color0 -h 35% -w 100% -x 0% -y 100% "tmux new-session -A -s org"
}

# toggle session switcher popup
bind C-s display-popup -BE -S fg=color0 -h 10% -w 100% -x 0% -y 100% "~/.config/scripts/tmux-sessions-popup.sh"

bind C-_ if-shell -F '#{==:#{session_name},scratch}' { # it actually triggers with C-/
  detach-client
} {
  display-popup -BE -S fg=color0 -h 35% -w 100% -x 0% -y 100% "tmux new-session -A -s scratch"
}

bind C-p if-shell -F '#{==:#{session_name},scratch}' {
  detach-client
} {
  display-popup -E -S fg=color0 -h 75% -w 75% -x C -y C "tmux new-session -A -s scratch"
}

# capture content of pane |> filter |> fzf |> action
bind-key C-u run-shell -b "bash ${HOME}/.config/scripts/fzf-urls"
# bind-key C-u run-shell -b "tmux capture-pane -J -p | grep -oE '(https?):\/\/.*[^>]' | fzf-tmux -d20 --multi --bind alt-a:select-all,alt-d:deselect-all | xargs open"

bind-key P run-shell -b 'echo "playpause" | nc -U /tmp/ncspot-501/ncspot.sock > /dev/null'
